module sram #(parameter ADDR = 4, WIDTH = 32)
			(input wrclk, wren, [ADDR-1:0] wr_addr, [WIDTH-1:0] wr_data,
			 input rdclk, read_en, [ADDR-1:0] rd_addr,
			 output reg [WIDTH-1:0] read_data);
			
reg [WIDTH-1:0] mem [ADDR-1:0];

always @(posedge wrclk)
begin
	if(wren)
		mem[ADDR] <= wr_data;
	else
		mem[ADDR] <= 'b0;
end

always @(posedge rdclk)
begin
	if(read_en)
		read_data <= mem[rd_addr];
	else
		read_data <= 'b0;
end

endmodule